/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CompoundAdapter,
  CompoundAdapterInterface,
  BaseAdapter,
} from "../CompoundAdapter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "issuanceFee",
            type: "uint256",
          },
        ],
        internalType: "struct BaseAdapter.AdapterParams",
        name: "_adapterParams",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_lscale",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adapterParams",
    outputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "issuanceFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIssuanceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTarget",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scaleStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tilt",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tBal",
        type: "uint256",
      },
    ],
    name: "unwrapTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "uBal",
        type: "uint256",
      },
    ],
    name: "wrapUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001ef838038062001ef883398101604081905262000034916200078f565b8051600080546001600160a01b03199081166001600160a01b039384161782556020840151600180549092169316928317905560408084015160025560608401516003556080840151600490815560a085015160055581516306fdde0360e01b815291518594936306fdde039380840193919291908290030181865afa158015620000c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000ed91908101906200084f565b604051602001620000ff9190620008fc565b6040516020818303038152906040526006908051906020019062000125929190620006b6565b5080602001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000169573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200019391908101906200084f565b604051602001620001a591906200092a565b60405160208183030381529060405260079080519060200190620001cb929190620006b6565b5080600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200020f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000235919062000958565b60ff166080526020808201516040805163313ce56760e01b815290516001600160a01b039092169263313ce567926004808401938290030181865afa15801562000283573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a9919062000958565b60ff1660a052506020808201518251620002dd926001600160a01b0390911691906000199062000b3c620002e4821b17901c565b5062000a52565b801580620003625750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156200033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000360919062000984565b155b620003da5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620004329185916200043716565b505050565b600062000493826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200051560201b62000c89179092919060201c565b805190915015620004325780806020019051810190620004b491906200099e565b620004325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620003d1565b60606200052684846000856200052e565b949350505050565b606082471015620005915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620003d1565b600080866001600160a01b03168587604051620005af9190620009c2565b60006040518083038185875af1925050503d8060008114620005ee576040519150601f19603f3d011682016040523d82523d6000602084013e620005f3565b606091505b509092509050620006078783838762000612565b979650505050505050565b60608315620006835782516200067b576001600160a01b0385163b6200067b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620003d1565b508162000526565b6200052683838151156200069a5781518083602001fd5b8060405162461bcd60e51b8152600401620003d19190620009e0565b828054620006c49062000a15565b90600052602060002090601f016020900481019282620006e8576000855562000733565b82601f106200070357805160ff191683800117855562000733565b8280016001018555821562000733579182015b828111156200073357825182559160200191906001019062000716565b506200074192915062000745565b5090565b5b8082111562000741576000815560010162000746565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200078a57600080fd5b919050565b600060c08284031215620007a257600080fd5b60405160c081016001600160401b0381118282101715620007c757620007c76200075c565b604052620007d58362000772565b8152620007e56020840162000772565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b60005b83811015620008395781810151838201526020016200081f565b8381111562000849576000848401525b50505050565b6000602082840312156200086257600080fd5b81516001600160401b03808211156200087a57600080fd5b818401915084601f8301126200088f57600080fd5b815181811115620008a457620008a46200075c565b604051601f8201601f19908116603f01168101908382118183101715620008cf57620008cf6200075c565b81604052828152876020848701011115620008e957600080fd5b620006078360208301602088016200081c565b60008251620009108184602087016200081c565b671020b230b83a32b960c11b920191825250600801919050565b600082516200093e8184602087016200081c565b6716b0b230b83a32b960c11b920191825250600801919050565b6000602082840312156200096b57600080fd5b815160ff811681146200097d57600080fd5b9392505050565b6000602082840312156200099757600080fd5b5051919050565b600060208284031215620009b157600080fd5b815180151581146200097d57600080fd5b60008251620009d68184602087016200081c565b9190910192915050565b602081526000825180602084015262000a018160408501602087016200081c565b601f01601f19169190910160400192915050565b600181811c9082168062000a2a57607f821691505b6020821081141562000a4c57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05161146b62000a8d60003960006102980152600081816101d201528181610ca601528181610cd30152610d1a015261146b6000f3fe6080604052600436106100f75760003560e01c80636f307dc31161008a578063c39a3b2911610059578063c39a3b291461033c578063c3ca9a9b14610358578063f00e6a2a1461036d578063f51e181a1461038b57600080fd5b80636f307dc3146102ba57806395d89b41146102cf578063a8111417146102e4578063ad5c46481461031457600080fd5b80634aae9fed116100c65780634aae9fed1461020657806351c39ea1146102265780636109682014610246578063691ddb471461028657600080fd5b806306fdde0314610103578063083118d51461012e578063226778491461019d57806345ed132f146101c057600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b506101186103a0565b60405161012591906110eb565b60405180910390f35b34801561013a57600080fd5b50600054600154600254600354600454600554610165956001600160a01b0390811695169392919086565b604080516001600160a01b039788168152969095166020870152938501929092526060840152608083015260a082015260c001610125565b3480156101a957600080fd5b506101b261042e565b604051908152602001610125565b3480156101cc57600080fd5b506101f47f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610125565b34801561021257600080fd5b506101b261022136600461111e565b6104bc565b34801561023257600080fd5b506101b261024136600461111e565b61077e565b34801561025257600080fd5b5061026e734ddc2d193948926d02f9b1fe9e1daa0718270ed581565b6040516001600160a01b039091168152602001610125565b34801561029257600080fd5b506101f47f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c657600080fd5b5061026e610a36565b3480156102db57600080fd5b50610118610ad4565b3480156102f057600080fd5b506008546009546102ff919082565b60408051928352602083019190915201610125565b34801561032057600080fd5b5061026e73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561034857600080fd5b5060405160008152602001610125565b34801561036457600080fd5b506005546101b2565b34801561037957600080fd5b506001546001600160a01b031661026e565b34801561039757600080fd5b506101b2610ae1565b600680546103ad90611137565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611137565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b505050505081565b600080600060010160009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab9190611172565b90506104b681610ca0565b91505090565b6000806104c7610a36565b6001549091506001600160a01b03908116906104e7908316333087610d59565b60006104f282610d97565b9050801561056057604051632e1a7d4d60e01b81526004810186905273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d90602401600060405180830381600087803b15801561054757600080fd5b505af115801561055b573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190611172565b905081156106385760015460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b918991600480830192600092919082900301818588803b15801561061a57600080fd5b505af115801561062e573d6000803e3d6000fd5b50505050506106e7565b60015460405163140e25ad60e31b8152600481018890526001600160a01b039091169063a0712d68906024016020604051808303816000875af1158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611172565b156106e75760405162461bcd60e51b815260206004820152600b60248201526a135a5b9d0819985a5b195960aa1b60448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015260009082906001600160a01b038616906370a0823190602401602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611172565b61075e91906111a1565b90506107746001600160a01b0385163383610e57565b9695505050505050565b600080610789610a36565b6001549091506001600160a01b031660006107a382610d97565b90506107ba6001600160a01b038316333088610d59565b60008161082e576040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108299190611172565b610830565b475b60015460405163db006a7560e01b8152600481018990529192506001600160a01b03169063db006a75906024016020604051808303816000875af115801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a09190611172565b156108dd5760405162461bcd60e51b815260206004820152600d60248201526c14995919595b4819985a5b1959609a1b60448201526064016106de565b600082610951576040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190611172565b610953565b475b9050600061096183836111a1565b90508315610a175760405160009073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29083908381818185875af1925050503d80600081146109bf576040519150601f19603f3d011682016040523d82523d6000602084013e6109c4565b606091505b5050905080610a155760405162461bcd60e51b815260206004820152601d60248201527f416461707465723a20455448205472616e73666572206661696c65642e00000060448201526064016106de565b505b610a2b6001600160a01b0387163383610e57565b979650505050505050565b6001546000906001600160a01b0316610a4e81610d97565b610ab957806001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab491906111b8565b6104b6565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc291505090565b600780546103ad90611137565b600080600060010160009054906101000a90046001600160a01b03166001600160a01b031663bd6d894d6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610487573d6000803e3d6000fd5b801580610bb65750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb49190611172565b155b610c215760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016106de565b6040516001600160a01b038316602482015260448101829052610c8490849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e87565b505050565b6060610c988484600085610f59565b949350505050565b600060087f000000000000000000000000000000000000000000000000000000000000000060ff161015610d1357610cf97f000000000000000000000000000000000000000000000000000000000000000060086111e8565b610d0490600a6112ef565b610d0e90836112fe565b610d53565b610d3e60087f00000000000000000000000000000000000000000000000000000000000000006111e8565b610d4990600a6112ef565b610d53908361131d565b92915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610d919085906323b872dd60e01b90608401610c4d565b50505050565b604051630c68aa8960e31b602082015260009060240160405160208183030381529060405280519060200120826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e01573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e299190810190611355565b604051602001610e3991906113f7565b60405160208183030381529060405280519060200120149050919050565b6040516001600160a01b038316602482015260448101829052610c8490849063a9059cbb60e01b90606401610c4d565b6000610edc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c899092919063ffffffff16565b805190915015610c845780806020019051810190610efa9190611413565b610c845760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106de565b606082471015610fba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106de565b600080866001600160a01b03168587604051610fd691906113f7565b60006040518083038185875af1925050503d8060008114611013576040519150601f19603f3d011682016040523d82523d6000602084013e611018565b606091505b5091509150610a2b8783838760608315611090578251611089576001600160a01b0385163b6110895760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106de565b5081610c98565b610c9883838151156110a55781518083602001fd5b8060405162461bcd60e51b81526004016106de91906110eb565b60005b838110156110da5781810151838201526020016110c2565b83811115610d915750506000910152565b602081526000825180602084015261110a8160408501602087016110bf565b601f01601f19169190910160400192915050565b60006020828403121561113057600080fd5b5035919050565b600181811c9082168061114b57607f821691505b6020821081141561116c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561118457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111b3576111b361118b565b500390565b6000602082840312156111ca57600080fd5b81516001600160a01b03811681146111e157600080fd5b9392505050565b600060ff821660ff8416808210156112025761120261118b565b90039392505050565b600181815b8085111561124657816000190482111561122c5761122c61118b565b8085161561123957918102915b93841c9390800290611210565b509250929050565b60008261125d57506001610d53565b8161126a57506000610d53565b8160018114611280576002811461128a576112a6565b6001915050610d53565b60ff84111561129b5761129b61118b565b50506001821b610d53565b5060208310610133831016604e8410600b84101617156112c9575081810a610d53565b6112d3838361120b565b80600019048211156112e7576112e761118b565b029392505050565b60006111e160ff84168361124e565b60008160001904831182151516156113185761131861118b565b500290565b60008261133a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561136757600080fd5b815167ffffffffffffffff8082111561137f57600080fd5b818401915084601f83011261139357600080fd5b8151818111156113a5576113a561133f565b604051601f8201601f19908116603f011681019083821181831017156113cd576113cd61133f565b816040528281528760208487010111156113e657600080fd5b610a2b8360208301602088016110bf565b600082516114098184602087016110bf565b9190910192915050565b60006020828403121561142557600080fd5b815180151581146111e157600080fdfea2646970667358221220b55512f3b430a21541ae58443853eaaf01e029b093383f6ac088f986220d243664736f6c634300080a0033";

type CompoundAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundAdapter__factory extends ContractFactory {
  constructor(...args: CompoundAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _adapterParams: BaseAdapter.AdapterParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompoundAdapter> {
    return super.deploy(
      _adapterParams,
      overrides || {}
    ) as Promise<CompoundAdapter>;
  }
  override getDeployTransaction(
    _adapterParams: BaseAdapter.AdapterParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_adapterParams, overrides || {});
  }
  override attach(address: string): CompoundAdapter {
    return super.attach(address) as CompoundAdapter;
  }
  override connect(signer: Signer): CompoundAdapter__factory {
    return super.connect(signer) as CompoundAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundAdapterInterface {
    return new utils.Interface(_abi) as CompoundAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundAdapter {
    return new Contract(address, _abi, signerOrProvider) as CompoundAdapter;
  }
}
