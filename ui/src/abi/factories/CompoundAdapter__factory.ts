/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CompoundAdapter,
  CompoundAdapterInterface,
  BaseAdapter,
} from "../CompoundAdapter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "issuanceFee",
            type: "uint256",
          },
        ],
        internalType: "struct BaseAdapter.AdapterParams",
        name: "_adapterParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_CETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_lscale",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adapterParams",
    outputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "issuanceFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIssuanceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTarget",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scaleStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tilt",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tBal",
        type: "uint256",
      },
    ],
    name: "unwrapTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "uBal",
        type: "uint256",
      },
    ],
    name: "wrapUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001fb338038062001fb383398101604081905262000035916200079b565b8251600080546001600160a01b03199081166001600160a01b039384161782556020860151600180549092169316928317905560408086015160025560608601516003556080860151600490815560a087015160055581516306fdde0360e01b815291518794936306fdde039380840193919291908290030181865afa158015620000c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000ee919081019062000891565b6040516020016200010091906200093e565b6040516020818303038152906040526006908051906020019062000126929190620006c2565b5080602001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200016a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000194919081019062000891565b604051602001620001a691906200096c565b60405160208183030381529060405260079080519060200190620001cc929190620006c2565b5080600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023691906200099a565b60ff166080526020808201516040805163313ce56760e01b815290516001600160a01b039092169263313ce567926004808401938290030181865afa15801562000284573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002aa91906200099a565b60ff1660a052506001600160a01b0380831660c05281811660e0526020808501518551620002e79316916000199062000b8c620002f0821b17901c565b50505062000a94565b8015806200036e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801562000346573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200036c9190620009c6565b155b620003e65760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200043e9185916200044316565b505050565b60006200049f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200052160201b62000cd9179092919060201c565b8051909150156200043e5780806020019051810190620004c09190620009e0565b6200043e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620003dd565b60606200053284846000856200053a565b949350505050565b6060824710156200059d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620003dd565b600080866001600160a01b03168587604051620005bb919062000a04565b60006040518083038185875af1925050503d8060008114620005fa576040519150601f19603f3d011682016040523d82523d6000602084013e620005ff565b606091505b50909250905062000613878383876200061e565b979650505050505050565b606083156200068f57825162000687576001600160a01b0385163b620006875760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620003dd565b508162000532565b620005328383815115620006a65781518083602001fd5b8060405162461bcd60e51b8152600401620003dd919062000a22565b828054620006d09062000a57565b90600052602060002090601f016020900481019282620006f457600085556200073f565b82601f106200070f57805160ff19168380011785556200073f565b828001600101855582156200073f579182015b828111156200073f57825182559160200191906001019062000722565b506200074d92915062000751565b5090565b5b808211156200074d576000815560010162000752565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200079657600080fd5b919050565b6000806000838503610100811215620007b357600080fd5b60c0811215620007c257600080fd5b5060405160c081016001600160401b0381118282101715620007e857620007e862000768565b604052620007f6856200077e565b815262000806602086016200077e565b602082015260408501516040820152606085015160608201526080850151608082015260a085015160a0820152809350506200084560c085016200077e565b91506200085560e085016200077e565b90509250925092565b60005b838110156200087b57818101518382015260200162000861565b838111156200088b576000848401525b50505050565b600060208284031215620008a457600080fd5b81516001600160401b0380821115620008bc57600080fd5b818401915084601f830112620008d157600080fd5b815181811115620008e657620008e662000768565b604051601f8201601f19908116603f0116810190838211818310171562000911576200091162000768565b816040528281528760208487010111156200092b57600080fd5b620006138360208301602088016200085e565b60008251620009528184602087016200085e565b671020b230b83a32b960c11b920191825250600801919050565b60008251620009808184602087016200085e565b6716b0b230b83a32b960c11b920191825250600801919050565b600060208284031215620009ad57600080fd5b815160ff81168114620009bf57600080fd5b9392505050565b600060208284031215620009d957600080fd5b5051919050565b600060208284031215620009f357600080fd5b81518015158114620009bf57600080fd5b6000825162000a188184602087016200085e565b9190910192915050565b602081526000825180602084015262000a438160408501602087016200085e565b601f01601f19169190910160400192915050565b600181811c9082168062000a6c57607f821691505b6020821081141562000a8e57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516114bb62000af86000396000610258015260008181610332015281816105280152818161099a0152610aff015260006102a40152600081816101d201528181610cf601528181610d230152610d6a01526114bb6000f3fe6080604052600436106100f75760003560e01c80636f307dc31161008a578063c39a3b2911610059578063c39a3b2914610354578063c3ca9a9b14610370578063f00e6a2a14610385578063f51e181a146103a357600080fd5b80636f307dc3146102c657806395d89b41146102db578063a8111417146102f0578063ad5c46481461032057600080fd5b80634aae9fed116100c65780634aae9fed1461020657806351c39ea1146102265780636109682014610246578063691ddb471461029257600080fd5b806306fdde0314610103578063083118d51461012e578063226778491461019d57806345ed132f146101c057600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b506101186103b8565b604051610125919061113b565b60405180910390f35b34801561013a57600080fd5b50600054600154600254600354600454600554610165956001600160a01b0390811695169392919086565b604080516001600160a01b039788168152969095166020870152938501929092526060840152608083015260a082015260c001610125565b3480156101a957600080fd5b506101b2610446565b604051908152602001610125565b3480156101cc57600080fd5b506101f47f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610125565b34801561021257600080fd5b506101b261022136600461116e565b6104d4565b34801561023257600080fd5b506101b261024136600461116e565b6107ab565b34801561025257600080fd5b5061027a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610125565b34801561029e57600080fd5b506101f47f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d257600080fd5b5061027a610a7a565b3480156102e757600080fd5b50610118610b24565b3480156102fc57600080fd5b5060085460095461030b919082565b60408051928352602083019190915201610125565b34801561032c57600080fd5b5061027a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036057600080fd5b5060405160008152602001610125565b34801561037c57600080fd5b506005546101b2565b34801561039157600080fd5b506001546001600160a01b031661027a565b3480156103af57600080fd5b506101b2610b31565b600680546103c590611187565b80601f01602080910402602001604051908101604052809291908181526020018280546103f190611187565b801561043e5780601f106104135761010080835404028352916020019161043e565b820191906000526020600020905b81548152906001019060200180831161042157829003601f168201915b505050505081565b600080600060010160009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c391906111c2565b90506104ce81610cf0565b91505090565b6000806104df610a7a565b6001549091506001600160a01b03908116906104ff908316333087610da9565b600061050a82610de7565b9050801561058d57604051632e1a7d4d60e01b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561057457600080fd5b505af1158015610588573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f891906111c2565b905081156106655760015460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b918991600480830192600092919082900301818588803b15801561064757600080fd5b505af115801561065b573d6000803e3d6000fd5b5050505050610714565b60015460405163140e25ad60e31b8152600481018890526001600160a01b039091169063a0712d68906024016020604051808303816000875af11580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d491906111c2565b156107145760405162461bcd60e51b815260206004820152600b60248201526a135a5b9d0819985a5b195960aa1b60448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015260009082906001600160a01b038616906370a0823190602401602060405180830381865afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078191906111c2565b61078b91906111f1565b90506107a16001600160a01b0385163383610ea7565b9695505050505050565b6000806107b6610a7a565b6001549091506001600160a01b031660006107d082610de7565b90506107e76001600160a01b038316333088610da9565b60008161085b576040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085691906111c2565b61085d565b475b60015460405163db006a7560e01b8152600481018990529192506001600160a01b03169063db006a75906024016020604051808303816000875af11580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd91906111c2565b1561090a5760405162461bcd60e51b815260206004820152600d60248201526c14995919595b4819985a5b1959609a1b604482015260640161070b565b60008261097e576040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097991906111c2565b610980565b475b9050600061098e83836111f1565b90508315610a5b5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a03576040519150601f19603f3d011682016040523d82523d6000602084013e610a08565b606091505b5050905080610a595760405162461bcd60e51b815260206004820152601d60248201527f416461707465723a20455448205472616e73666572206661696c65642e000000604482015260640161070b565b505b610a6f6001600160a01b0387163383610ea7565b979650505050505050565b6001546000906001600160a01b0316610a9281610de7565b610afd57806001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af89190611208565b6104ce565b7f000000000000000000000000000000000000000000000000000000000000000091505090565b600780546103c590611187565b600080600060010160009054906101000a90046001600160a01b03166001600160a01b031663bd6d894d6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561049f573d6000803e3d6000fd5b801580610c065750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0491906111c2565b155b610c715760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161070b565b6040516001600160a01b038316602482015260448101829052610cd490849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ed7565b505050565b6060610ce88484600085610fa9565b949350505050565b600060087f000000000000000000000000000000000000000000000000000000000000000060ff161015610d6357610d497f00000000000000000000000000000000000000000000000000000000000000006008611238565b610d5490600a61133f565b610d5e908361134e565b610da3565b610d8e60087f0000000000000000000000000000000000000000000000000000000000000000611238565b610d9990600a61133f565b610da3908361136d565b92915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610de19085906323b872dd60e01b90608401610c9d565b50505050565b604051630c68aa8960e31b602082015260009060240160405160208183030381529060405280519060200120826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e51573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e7991908101906113a5565b604051602001610e899190611447565b60405160208183030381529060405280519060200120149050919050565b6040516001600160a01b038316602482015260448101829052610cd490849063a9059cbb60e01b90606401610c9d565b6000610f2c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cd99092919063ffffffff16565b805190915015610cd45780806020019051810190610f4a9190611463565b610cd45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161070b565b60608247101561100a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161070b565b600080866001600160a01b031685876040516110269190611447565b60006040518083038185875af1925050503d8060008114611063576040519150601f19603f3d011682016040523d82523d6000602084013e611068565b606091505b5091509150610a6f87838387606083156110e05782516110d9576001600160a01b0385163b6110d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161070b565b5081610ce8565b610ce883838151156110f55781518083602001fd5b8060405162461bcd60e51b815260040161070b919061113b565b60005b8381101561112a578181015183820152602001611112565b83811115610de15750506000910152565b602081526000825180602084015261115a81604085016020870161110f565b601f01601f19169190910160400192915050565b60006020828403121561118057600080fd5b5035919050565b600181811c9082168061119b57607f821691505b602082108114156111bc57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156111d457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611203576112036111db565b500390565b60006020828403121561121a57600080fd5b81516001600160a01b038116811461123157600080fd5b9392505050565b600060ff821660ff841680821015611252576112526111db565b90039392505050565b600181815b8085111561129657816000190482111561127c5761127c6111db565b8085161561128957918102915b93841c9390800290611260565b509250929050565b6000826112ad57506001610da3565b816112ba57506000610da3565b81600181146112d057600281146112da576112f6565b6001915050610da3565b60ff8411156112eb576112eb6111db565b50506001821b610da3565b5060208310610133831016604e8410600b8410161715611319575081810a610da3565b611323838361125b565b8060001904821115611337576113376111db565b029392505050565b600061123160ff84168361129e565b6000816000190483118215151615611368576113686111db565b500290565b60008261138a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156113b757600080fd5b815167ffffffffffffffff808211156113cf57600080fd5b818401915084601f8301126113e357600080fd5b8151818111156113f5576113f561138f565b604051601f8201601f19908116603f0116810190838211818310171561141d5761141d61138f565b8160405282815287602084870101111561143657600080fd5b610a6f83602083016020880161110f565b6000825161145981846020870161110f565b9190910192915050565b60006020828403121561147557600080fd5b8151801515811461123157600080fdfea2646970667358221220ba6b828206ffb431f99c818f2a2f5ecb8055765311692e16476ac4181f8983d964736f6c634300080a0033";

type CompoundAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundAdapter__factory extends ContractFactory {
  constructor(...args: CompoundAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _adapterParams: BaseAdapter.AdapterParamsStruct,
    _WETH: PromiseOrValue<string>,
    _CETH: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompoundAdapter> {
    return super.deploy(
      _adapterParams,
      _WETH,
      _CETH,
      overrides || {}
    ) as Promise<CompoundAdapter>;
  }
  override getDeployTransaction(
    _adapterParams: BaseAdapter.AdapterParamsStruct,
    _WETH: PromiseOrValue<string>,
    _CETH: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _adapterParams,
      _WETH,
      _CETH,
      overrides || {}
    );
  }
  override attach(address: string): CompoundAdapter {
    return super.attach(address) as CompoundAdapter;
  }
  override connect(signer: Signer): CompoundAdapter__factory {
    return super.connect(signer) as CompoundAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundAdapterInterface {
    return new utils.Interface(_abi) as CompoundAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundAdapter {
    return new Contract(address, _abi, signerOrProvider) as CompoundAdapter;
  }
}
