/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  EulerAdapter,
  EulerAdapterInterface,
  BaseAdapter,
} from "../EulerAdapter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlying",
            type: "address",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "delta",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "issuanceFee",
            type: "uint256",
          },
        ],
        internalType: "struct BaseAdapter.AdapterParams",
        name: "_adapterParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_eulerMain",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_lscale",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adapterParams",
    outputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "issuanceFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIssuanceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTarget",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaleStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tilt",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tBal",
        type: "uint256",
      },
    ],
    name: "unwrapTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "uBal",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "uBal",
        type: "uint256",
      },
    ],
    name: "wrapUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "tBal",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type EulerAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EulerAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EulerAdapter__factory extends ContractFactory {
  constructor(...args: EulerAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _adapterParams: BaseAdapter.AdapterParamsStruct,
    _eulerMain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EulerAdapter> {
    return super.deploy(
      _adapterParams,
      _eulerMain,
      overrides || {}
    ) as Promise<EulerAdapter>;
  }
  override getDeployTransaction(
    _adapterParams: BaseAdapter.AdapterParamsStruct,
    _eulerMain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _adapterParams,
      _eulerMain,
      overrides || {}
    );
  }
  override attach(address: string): EulerAdapter {
    return super.attach(address) as EulerAdapter;
  }
  override connect(signer: Signer): EulerAdapter__factory {
    return super.connect(signer) as EulerAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EulerAdapterInterface {
    return new utils.Interface(_abi) as EulerAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EulerAdapter {
    return new Contract(address, _abi, signerOrProvider) as EulerAdapter;
  }
}
