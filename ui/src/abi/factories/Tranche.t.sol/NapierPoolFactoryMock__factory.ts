/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NapierPoolFactoryMock,
  NapierPoolFactoryMockInterface,
} from "../../Tranche.t.sol/NapierPoolFactoryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "nPT",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRegisteredPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061016a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633bc5de3014610046578063c699e63314610071578063e343361514610095575b600080fd5b6040805160008082526020820181905291810182905260608101919091526080015b60405180910390f35b61008561007f3660046100df565b50600190565b6040519015158152602001610068565b6100ab6100a3366004610101565b600092915050565b6040516001600160a01b039091168152602001610068565b80356001600160a01b03811681146100da57600080fd5b919050565b6000602082840312156100f157600080fd5b6100fa826100c3565b9392505050565b6000806040838503121561011457600080fd5b61011d836100c3565b915061012b602084016100c3565b9050925092905056fea2646970667358221220dd1062ee1f657c3f2e2fb3b617b4d74a246f73e08eb1aed74cc6426b6e74727464736f6c634300080a0033";

type NapierPoolFactoryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NapierPoolFactoryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NapierPoolFactoryMock__factory extends ContractFactory {
  constructor(...args: NapierPoolFactoryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NapierPoolFactoryMock> {
    return super.deploy(overrides || {}) as Promise<NapierPoolFactoryMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NapierPoolFactoryMock {
    return super.attach(address) as NapierPoolFactoryMock;
  }
  override connect(signer: Signer): NapierPoolFactoryMock__factory {
    return super.connect(signer) as NapierPoolFactoryMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NapierPoolFactoryMockInterface {
    return new utils.Interface(_abi) as NapierPoolFactoryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NapierPoolFactoryMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NapierPoolFactoryMock;
  }
}
